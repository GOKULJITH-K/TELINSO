<html>
     <head>
         <meta name="viewport" content="width=device-width,initial-scale=1.0">
         <title>TELINSO</title>
         
         <link rel="stylesheet" href="/analysis.css">
         <script src="/navbar.js" defer></script>
         <link rel="stylesheet" href="/nav.css">
         <script src="/topbtn.js" defer></script>
         <link rel="stylesheet" href="/overview.css">
         <link rel="stylesheet" href="/footer.css">
         <link rel="preconnect" href="https://fonts.googleapis.com">
         <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
         <script src="https://kit.fontawesome.com/01780eab25.js" crossorigin="anonymous"></script>
         <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@500&display=swap" rel="stylesheet"> 
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
         <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
         <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
         <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
         <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
         <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
         <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
         <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
         <link rel="manifest" href="/site.webmanifest">
         <script>

         </script>
         
        </head>
     <body>
      <button onclick="topFunction()" id="myBtn" class="topbtn" style="width: auto;" title="Go to top"><i class="fa-solid fa-arrow-up"></i></button>
        
         <section class="header" >
            

            <nav >
              
              <a href="/" class="logo"><img src="/logo.png"></a>
             
                
              <i class="fa-solid fa-bars  fas" onclick="openmenu()"></i>
  

             <div class="navbtn">
             <a  class="hero-btn2 heronew"> Home </a>
             <a class="hero-btn2 heronew"> Product </a>
             <a class="hero-btn2 heronew"> About </a>
             <a class="hero-btn2 heronew"> Contact </a>
             <a class="hero-btn2 heronew"> Subscription </a>
             <a href="/logout" class="hero-btn2"  ><i class="fa-solid fa-user"></i>Logout</a>
             </div>
            
                <ul id="sidemenu">
                    <li><a href="#contact" onclick="closemenu()" style="font-size: 13px;"><i class="fa-solid fa-xmark"></i></a></li>
                    <hr>
                    <li><a href="/">Home</a></li>
                    <hr>
                        <li><a href="#about">Product</a></li>
                    <hr>
                        <li><a href="#about">About</a></li>
                        <hr>
                        <li><a href="#contact">Contact</a></li>
                        <hr>
                        <p>
                            Thank you for choosing Telinso. We value your trust and support. Please free to Contact us anytime
                        </p>
                       
                        <li><a href="login" class="login">Log out</a></li>
                        <li><a href="/" class="login join">Subscription</a></li>
                   
                               
                </ul>
                
                
            </nav>
            <div class="icons-header">
                <a href="/"><i class="fa-solid fa-house"></i></a>
                <a href="/savedata"><i class="fa-solid fa-cloud-arrow-up"></i></a>
                <a href="/farmerassist"><i class="fa-solid fa-handshake-angle"></i></a>
                <a href="/weather"><i class="fa-solid fa-cloud-bolt"></i></a>
                <a href="/soilhealth"><i class="fa-solid fa-file-waveform"></i></a>
                <a href="/crop"><i class="fa-solid fa-wheat-awn"></i></a>
          </div>
             
         </section>
         <section class="overview" >
             
          <div class="row">
             <div class="overview-col">
                 <h1>SOIL ANALYTICS</h1>
                 <span class="description"> Description </span>
                   <span class="overview-description">
                    Embark on your soil analysis journey with Telinso's innovative soil analytics. Seamlessly record soil samples with accompanying analyses. Track changes, monitor trends, and make informed decisions for optimal soil health. This tool ensures a comprehensive archive, empowering users with a visual timeline. 
                    Simplify soil analysis and enhance farming experiences for a thriving future. </span>
                 
                
                 
                 <P>
                  Elevate your agricultural practices with Telinso's dynamic soil analysis feature. Uncover the intricacies of your soil's
                   composition as Telinso meticulously analyzes various parameters. Receive detailed insights on crucial factors, assessing
                    their suitability for diverse cultivation types. The platform doesn't stop there it goes a step further by presenting visually
                     intuitive analyses. Witness your soil's health unfold through interactive visualizations, making complex data easily digestible.
                      Telinso empowers users to make informed decisions, ensuring that every planting choice aligns seamlessly with the unique needs of 
                      their soil.
                   Explore the world beneath the surface and cultivate success with Telinso's comprehensive soil analysis and visualization capabilities.
              </P>
                 
                     
                  
             </div>
               
         </div>
         
     </section>
         
              <section class="product">
                <h1>Analysis</h1>
               <div class="row1">
                <span class="description"> User Instructions</span>
                <span class="overview-description">
                 <ul class="overview-description">
                  <li>Select a crop from the provided list or type the crop and press 'Find Out'.</li>
                   <li> Presenting the current analysis results of the soil sample.</li>
                   <li> Display the current visualization of soil sample data.</li>
                   <li> Validate results against researched ideal parameters for crops.</li>
                   <li> Anticipate changes upon evaluation of new samples.</li>
                 </ul>
                </span>
                <div class="product-col inputfield" style="box-shadow: none;background-color: transparent;" >
                  <h3>Enter a crop Name</h3>
                  <form id="Form" onsubmit="myFunction(event);">
                      <input class="crop-input" id="crop"  placeholder="E.g., rice, Coconut,Rubber" >
                      <select class="selection-btn" id="selection-btn">
                        <option>Crop list</option>
                        <option value="Rice">Rice</option>
                        <option value="Coconut">Coconut</option>
                        <option value="Carrot">Carrot</option>
                        <option value="Pepper">Pepper</option>
                        <option value="Cocoa">Cocoa</option>
                        <option value="Banana">Banana</option>
                        <option value="Tapioca">Tapioca</option>
                        <option value="Tomatoes">Tomatoes</option>
                        <option value="Cabbage">Cabbage</option>
                      </select>
                      <div class="separator"></div>
                      <button id="findout-btn"  class="search-btn"  >Find out</button>
                      
                  </form>
                </div>
                </div>
                <div class="row1">
                <div class="product-col" >
                    <div class="data">
                         <h3>Nitrogen</h3>
                         <p id="nitrogenmsg"> </p>
                           <canvas id="nitrogen"></canvas>
                    </div>
                </div>
                 <div class="product-col" >
                       <h3>Phosphorus</h3>
                      <p id="phosphorusmsg"></p>
                     <canvas id="phosphorus"></canvas>
                  </div>
                   <div class="product-col"  >
                       <h3>Potassium</h3>
                        <p id="potassiummsg"> </p>
                        <canvas id="potassium"></canvas>
                   </div>
              </div>
              <div class="row2">
                   <div class="product-col"  >
                        <h3>pH</h3>
                        <p id="phmsg"></p>
                        <canvas id="ph"></canvas>
                       </div>
                <div class="product-col"  >
                   <h3>Temperature</h3>
                   <p id="temperaturemsg"></p>
                   <canvas id="temperature"></canvas>
                 </div>
                <div class="product-col"  >
                   <h3>Humidity</h3>
                  <p id="humiditymsg"></p>
                  <canvas id="humidity"></canvas>
                 </div>
            
            
              </div>
              <div class="row2">
                <div class="product-col"  >
                  <h3>Electrical Conductivity</h3>
                  <p id="ecmsg"></p>
                  <canvas id="ec"></canvas>
                 </div>
                 <div class="product-col"  >
                  <h3>Visualization of Soil Parameters</h3>
                  <canvas  id="myChart"></canvas>
              </div>
              </div>
              
                
               
              </div>

               </section>
               
              
         
          

       <section class="footer">
          
       
            <div class="row">
                <div class="footer-col" >
                    <p>Soil Analysis</p>
                    <p>Visualization</p>
                    <p>Farmer Assist</p>
                    <p>Weather Forecast</p>
                   
                  
                        </div>
                        <hr>
                <div class="footer-col"  >
                      <p>Data Analytics</p>
                      <p>Cloud computing</p>
                      <p>Internet of things</p>
                      <p>Artificial intelligence</p>
                           
                                    </div>
                                    <hr>
                <div class="footer-col"  >
                   <p>Empowernment</p>
                   <p>Innovation</p>
                   <p>Possibilities</p>
                   <p>Collaboration</p>
                    
                </div>
                <hr>
            
            
           
            <div class="footer-col"  >
                
                
                <p>Home</p>
                <p>Product</p>
                <p>About</p>
                <p>Contact</p>
            </div>
            <hr>
    </div>
            <div class="footer-col" style="text-align: center;" >     
                   <p>
                    Telinso is an IoT-based solution that provides soil health data to farmers and agriculture enthusiasts. It consists of a comprehensive suite of software and hardware that can measure and monitor soil conditions and nutrients, such as pH, moisture, temperature, nitrogen, phosphorus, potassium, and more. By using Telinso, you can access real-time and accurate information about your soil health, and get customized recommendations on how to improve your crop productivity and soil quality. Telinso is a user-friendly, cost-effective, and scalable system that can help you optimize your farming practices and achieve sustainable agriculture. Learn more about Telinso and how it can benefit you. Contact us today
                </p>
            </div>
            <div class="footer-col" style="text-align: center;" >     
                <p>
                    <i class="fa-brands fa-instagram"></i><i class="fa-brands fa-linkedin"></i><i class="fa-brands fa-square-facebook"></i><i class="fa-brands fa-square-x-twitter"></i>
                   <br>
                   <p > 	&copy; TEAM TELINSO</p>
                </p>
            </div>
   </section>
   <script>
    let nitrogenChart,phosphorusChart,potassiumChart,phChart,temperatureChart,humidityChart,ecChart,myChart;
    function myFunction(event){
      event.preventDefault();
      let crop;

      const crop1=document.getElementById("crop").value;
      const crop2=document.getElementById("selection-btn").value;
     let nitrogenval,phosphorousval,potassiumval,phval,temperatureval,humidityval,electrical_conductivityval;
      if(crop1!= ""){

        crop=crop1;

      }
      else if(crop2!=""){

        crop=crop2;

      }
      else
      {
        crop=crop1;
      }
    
      switch(crop){
      
      case "Rice" :
        nitrogenval = "125";
        phosphorousval = "30";
        potassiumval = "100";
        phval = "7.25";
        temperatureval = "30";
        humidityval="75";
        electrical_conductivityval="0.4";
        break;
    
      case "Coconut" :

      nitrogenval = "150";
      phosphorousval = "60";
        potassiumval = "300";
        phval = "7.25";
        temperatureval = "25";
        humidityval="65";
        electrical_conductivityval="0.3";
        break;

       case "Carrot" :

    nitrogenval = "125";
    phosphorousval = "80";
      potassiumval = "100";
      phval = "6.5";
      temperatureval = "20";
      humidityval="60";
      electrical_conductivityval="0.7";
      break;

      case "Pepper" :

      nitrogenval = "150";
      phosphorousval = "80";
      potassiumval = "150";
      phval = "7.25";
      temperatureval = "25";
      humidityval="60";
      electrical_conductivityval="0.8";
      break;

    
    case "Cocoa" :

      nitrogenval = "150";
      phosphorousval = "60";
      potassiumval = "225";
      phval = "6.5";
      temperatureval = "27.5";
      humidityval="75";
      electrical_conductivityval="0.4";
      break;

      case "Banana" :

      nitrogenval = "175";
      phosphorousval = "80";
      potassiumval = "300";
      phval = "7.25";
      temperatureval = "27.5";
      humidityval="65";
      electrical_conductivityval="0.35";
      break;

      case "Tapioca" :

        nitrogenval = "125";
        phosphorousval = "80";
        potassiumval = "100";
        phval = "6";
        temperatureval = "30";
        humidityval="60";
        electrical_conductivityval="0.75";
        break;

        case "Tomatoes" :

        nitrogenval = "160";
        phosphorousval = "100";
        potassiumval = "160";
        phval = "6.4";
        temperatureval = "25";
        humidityval="60";
        electrical_conductivityval="1";
        break;

        case "Cabbage" :

        nitrogenval = "175";
        phosphorousval = "80";
        potassiumval = "175";
        phval = "6.5";
        temperatureval = "20";
        humidityval="60";
        electrical_conductivityval="0.75";
        break;

        
        default :
      nitrogenval = "0";
      phosphorousval = "0";
      potassiumval = "0";
      phval = "0";
      temperatureval = "0";
      humidityval="0";
      electrical_conductivityval="0";
      break;
    

    }
    
    const nitrogenSample = `<%= nitrogen %>`;
    const phosphorousSample = `<%= phosphorous %>`;
    const potassiumSample = `<%= potassium %>`;
    const phSample = `<%= ph %>`;
    const temperatureSample = `<%= temperature %>`;
    const humiditySample = `<%= humidity %>`;
    const ecSample = `<%= electrical_conductivity %>`;

    let nitrogenmsg,phosphorousmsg,potassiummsg,pHmsg,temperaturemsg,humiditymsg,electrical_conductivitymsg;
    
    
    if( nitrogenSample == nitrogenval){
      nitrogenmsg = `Value of nitrogen is optimum for ${crop} cultivation`;
    }
    else if(nitrogenSample<100){
      nitrogenmsg = `Value of nitrogen is lower than optimum value for ${crop} cultivation`;
    }
    else if( nitrogenSample > 175){
      nitrogenmsg = `Value of nitrogen is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      nitrogenmsg = `Value of nitrogen is closer to the optimum value for ${crop} cultivation`;
    }
   
    

    if(phosphorousSample == phosphorousval ){
      phosphorusmsg = `Value of phosphorus is optimum for ${crop} cultivation`;
    }
    else if( phosphorousSample > phosphorousval ){
      phosphorusmsg = `Value of phosphorus is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      phosphorousmsg = `Value of phosphorus is lower than optimum value for ${crop} cultivation`;
    }

    if(potassiumSample == potassiumval ){
      potassiummsg = `Value of potassium is optimum for ${crop} cultivation`;
    }
    else if(potassiumSample<100){
      potassiummsg = `Value of potassium is lower than optimum value for ${crop} cultivation`;
    }
    else if( potassiumSample > 300 ){
      potassiummsg = `Value of potassium is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      potassiummsg =`Value of Potassium is closer to the optimum value for ${crop} cultivation`;
    }
    
    
    if(phSample== phval ){
      pHmsg = `Value of pH is optimum for ${crop} cultivation`;
    }
    else if( phSample > phval ){
      pHmsg = `Value of pH is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      pHmsg = `Value of pH is lower than optimum value for ${crop} cultivation`;
    }
    if(temperatureSample== temperatureval ){
      temperaturemsg = `Value of Temperature is optimum for ${crop} cultivation`;
    }
    else if( temperatureSample > temperatureval ){
      temperaturemsg= `Value of Temperature is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      temperaturemsg = `Value of Temperature is lower than optimum value for ${crop} cultivation`;
    }
    if(humiditySample== humidityval ){
      humiditymsg = `Value of Humidity is optimum for ${crop} cultivation`;
    }
    else if( humiditySample > humidityval ){
      humiditymsg = `Value of Humidity is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      humiditymsg = `Value of Humidity is lower than optimum value for ${crop} cultivation`;
    }
    if(ecSample== electrical_conductivityval ){
      electrical_conductivitymsg = `Value of Electrical Conductivity is optimum for ${crop} cultivation`;
    }
    else if( ecSample > electrical_conductivityval ){
      electrical_conductivitymsg = `Value of Electrical Conductivity is higher than optimum for ${crop} cultivation. We can find that the soil contains an excess quantity of nutrients`;
    }
    else{
      electrical_conductivitymsg = `Value of Electrical Conductivity is lower than optimum value for ${crop} cultivation`;
    }
    document.getElementById("nitrogenmsg").innerText=nitrogenmsg ;
    document.getElementById("phosphorusmsg").innerText=phosphorousmsg;
    document.getElementById("potassiummsg").innerText=potassiummsg;
    document.getElementById("phmsg").innerText=pHmsg;
    document.getElementById("temperaturemsg").innerText=temperaturemsg;
    document.getElementById("humiditymsg").innerText=humiditymsg;
    document.getElementById("ecmsg").innerText=electrical_conductivitymsg;
    
    const nitrogendata = {
      labels: ["Nitrogen"],
      datasets: [{
        label: 'Ideal Values',
        data: [nitrogenval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)'],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [nitrogenSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };


    const phosphorousdata = {
      labels: ["Phosphorus"],
      datasets: [{
        label: 'Ideal Values',
        data: [phosphorousval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)'],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [phosphorousSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };

  const potassiumdata = {
      labels: ["Potassium"],
      datasets: [{
        label: 'Ideal Values',
        data: [potassiumval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)',],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [potassiumSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
    const phdata = {
      labels: ["pH"],
      datasets: [{
        label: 'Ideal Values',
        data: [phval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)',],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [phSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
    const temperaturedata = {
      labels: ["Temperature"],
      datasets: [{
        label: 'Ideal Values',
        data: [temperatureval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)',],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [temperatureSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
    const humiditydata = {
      labels: ["Humidity"],
      datasets: [{
        label: 'Ideal Values',
        data: [humidityval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)',],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [humiditySample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
    const ecdata = {
      labels: ["Electrical Conductivity"],
      datasets: [{
        label: 'Ideal Values',
        data: [electrical_conductivityval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)',],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [ecSample],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
    const data = {
      labels: ["N", "P", "K", "pH", "Temp", "Humidity", "EC"],
      datasets: [{
        label: 'Ideal Values',
        data: [nitrogenval,phosphorousval,potassiumval,phval,temperatureval,humidityval,electrical_conductivityval],
        backgroundColor: ['rgba(255, 26, 104, 0.2)'],
        borderColor: ['rgba(54, 162, 235, 1)'],
        borderWidth: 1
      },{
        label: 'Sample Values',
        data: [`<%= nitrogen %>`,`<%= phosphorous %>`,`<%= potassium %>`,`<%= ph %>`,`<%= temperature %>`,`<%= humidity %>`,`<%= electrical_conductivity %>`],
        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
        borderColor: ['rgba(0, 0, 0, 1)'],
        borderWidth: 1
      }]
    };
// config 
const config = {
      type: 'bar',
      data:nitrogendata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      
        
      }
    };
const config2 = {
      type: 'bar',
      data:phosphorousdata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      
        
      }
    };
const config3 = {
      type: 'bar',
      data:potassiumdata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      }
    };
    const config4 = {
      type: 'bar',
      data:phdata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      }
    };
    const config5 = {
      type: 'bar',
      data:temperaturedata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      }
    };
    const config6 = {
      type: 'bar',
      data:humiditydata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      }
    };
    const config7 = {
      type: 'bar',
      data:ecdata,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },

      }
    };
    const config8 = {
      type: 'line',
      data,
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        },
 
      }
    };
    

    if (nitrogenChart) nitrogenChart.destroy();
    if (phosphorusChart) phosphorusChart.destroy();
    if (potassiumChart) potassiumChart.destroy();
    if (phChart) phChart.destroy();
    if (temperatureChart) temperatureChart.destroy();
    if (humidityChart) humidityChart.destroy();
    if (ecChart) ecChart.destroy();
    if (myChart) myChart.destroy();

    
    nitrogenChart = new Chart(
      document.getElementById('nitrogen'),
      config
    );
    phosphorusChart = new Chart(
      document.getElementById('phosphorus'),
      config2
    );
    potassiumChart= new Chart(
      document.getElementById('potassium'),
      config3
    );
    phChart = new Chart(
      document.getElementById('ph'),
      config4
    );
    temperatureChart = new Chart(
      document.getElementById('temperature'),
      config5
    );
    humidityChart = new Chart(
      document.getElementById('humidity'),
      config6
    );
    ecChart=new Chart(
      document.getElementById('ec'),
      config7
    );
    myChart = new Chart(
      document.getElementById('myChart'),
      config8
    );


    
   

  }
  
   </script>

         </body>
</html>